version: 1.0.{build}
image:
  #- ubuntu1604
  - ubuntu1804
#image: ubuntu1804

environment:
  distribution: centos
  init: /usr/lib/systemd/systemd
  version: 7

services:
  - docker

install:
- 'sudo docker pull ${distribution}:${version}'
#- 'sudo docker build --no-cache --rm --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'
#-  sudo docker pull centos:7
#- sudo apt-get update -qq
build_script:
- 'sudo docker build --no-cache --rm --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'
- container_id=$(mktemp)
- role_name="ansible-role-apache2"
- 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/${role_name}:ro ${distribution}-${version}:ansible ${init} > "${container_id}"'
- 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test.yml --syntax-check'
- 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test.yml'
- >
      sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test.yml
      | grep -q 'changed=0.*failed=0'
      && (echo 'Idempotence test: pass' && exit 0)
      || (echo 'Idempotence test: fail' && exit 1)
- 'sudo docker stop "$(cat ${container_id})" '
- 'sudo docker rm -f "$(cat ${container_id})"'


test_script:

build: off
